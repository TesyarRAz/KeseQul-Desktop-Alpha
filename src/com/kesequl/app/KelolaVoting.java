/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.kesequl.app;

import com.kesequl.app.entity.Admin;
import com.kesequl.app.entity.EventVoting;
import com.kesequl.app.entity.User;
import com.kesequl.app.entity.Voting;
import com.kesequl.app.network.Client;
import com.kesequl.app.network.KesequlHttpCallback;
import com.kesequl.app.network.KesequlHttpRequest;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user65
 */
public class KelolaVoting extends javax.swing.JFrame {
    public static final String LINK_BUKA_LAPORAN = "http://localhost/kesequl-prealpha/laporan/voting/";

    private static final long serialVersionUID = 5548509128688779599L;

    private final User user;
    private final Admin admin;
    
    private final List<EventVoting> listVoting = new ArrayList<>();
    
    private boolean editMode = false;
    private EventVoting editEntity = null;
    
    private Runnable parentRunnable;
    /**
     * Creates new form KelolaVoting
     * @param user
     * @param admin
     */
    public KelolaVoting(User user, Admin admin, Runnable parentRunnable) {
        initComponents();
        
        this.user = user;
        this.admin = admin;
        this.parentRunnable = parentRunnable;
        
        btnRefreshActionPerformed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNamaEvent = new javax.swing.JTextField();
        txtMulai = new com.toedter.calendar.JDateChooser();
        txtSelesai = new com.toedter.calendar.JDateChooser();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnBuatSelesai = new javax.swing.JButton();
        btnDetail = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnLihatLaporan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Nama Event");

        jLabel2.setText("Tanggal Mulai");

        jLabel3.setText("Tanggal Selesai");

        jLabel4.setText(":");

        jLabel5.setText(":");

        jLabel6.setText(":");

        txtMulai.setDateFormatString("dd-MM-yyyy");

        txtSelesai.setDateFormatString("dd-MM-yyyy");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNamaEvent)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSelesai, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                            .addComponent(txtMulai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(141, 141, 141)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(txtNamaEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMulai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtSelesai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnBuatSelesai.setText("Buat Event Agar Selesai");
        btnBuatSelesai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuatSelesaiActionPerformed(evt);
            }
        });

        btnDetail.setText("Detail");
        btnDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Event", "Waktu Mulai", "Waktu Selesai", "Status", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table);

        btnLihatLaporan.setText("Lihat Laporan");
        btnLihatLaporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLihatLaporanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLihatLaporan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnBuatSelesai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDetail))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnHapus)
                                .addGap(18, 18, 18)
                                .addComponent(btnEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTambah))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuatSelesai)
                    .addComponent(btnDetail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah)
                    .addComponent(btnEdit)
                    .addComponent(btnHapus)
                    .addComponent(btnRefresh)
                    .addComponent(btnLihatLaporan))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        String namaEvent = txtNamaEvent.getText().trim();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String tanggal_mulai = txtMulai.getDate() != null ?  dateFormat.format(txtMulai.getDate()) : "";
        String tanggal_selesai = txtSelesai.getDate() != null ? dateFormat.format(txtSelesai.getDate()) : "";
        
        if (namaEvent.isEmpty() || tanggal_mulai.isEmpty() || tanggal_selesai.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Tidak boleh ada inputan yang kosong");
            return;
        }
        
        KesequlHttpRequest req = new KesequlHttpRequest(KesequlHttpRequest.Method.PUT);
        req.setUrl("voting/event?token=" + user.getToken());
        req.setVal(
                "nama_event=" + namaEvent + 
                "&tanggal_mulai=" + tanggal_mulai +
                "&tanggal_selesai=" + tanggal_selesai
        );
        Client.executeConnection(req, null, new KesequlHttpCallback() {
            @Override
            public void onPrepare() {
                btnTambah.setEnabled(false);
            }
            @Override
            public void onSuccess(int status, String pesan, Object data) {
                if (!Client.isTokenExpired(KelolaVoting.this, status, user)) {
                    if (status == 1) {
                        btnTambah.setEnabled(true);
                        
                        txtNamaEvent.setText("");
                        txtMulai.setDate(null);
                        txtSelesai.setDate(null);
                    }
                    
                    JOptionPane.showMessageDialog(KelolaVoting.this, pesan);
                }
            }

            @Override
            public void onFailed(Exception ex) {
                JOptionPane.showMessageDialog(KelolaVoting.this, ex);
            }
            
            @Override
            public void onDone() {
                btnTambah.setEnabled(true);
                btnRefreshActionPerformed(evt);
            }
        });
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        btnRefresh.setEnabled(false);
        
        KesequlHttpRequest req = new KesequlHttpRequest(KesequlHttpRequest.Method.GET);
        req.setUrl("voting/event?token=" + user.getToken());
        Client.executeConnectionList(req, EventVoting.class, new KesequlHttpCallback<List<EventVoting>>() {
            @Override
            public void onSuccess(int status, String pesan, List<EventVoting> data) {
                if (!Client.isTokenExpired(KelolaVoting.this, status, user)) {
                    if (status == 1) {
                        DefaultTableModel model = (DefaultTableModel) table.getModel();
                        model.setNumRows(0);

                        listVoting.clear();
                        listVoting.addAll(data);

                        if (listVoting != null) {
                            listVoting.forEach(voting -> {
                                model.addRow(new Object[] {
                                    voting.getNama(),
                                    voting.getTanggalMulai().format(DateTimeFormatter.ofPattern("dd-MM-yyyy")),
                                    voting.getTanggalSelesai().format(DateTimeFormatter.ofPattern("dd-MM-yyyy")),
                                    voting.isStatus() ? "Aktif" : "Tidak Aktif",
                                    voting.getPassword()
                                });
                            });
                        }
                        if (listVoting.size()<1)
                            model.removeRow(0);
                        table.setModel(model);
                    }
                }
                
            }

            @Override
            public void onFailed(Exception ex) {
                JOptionPane.showMessageDialog(KelolaVoting.this, ex.getMessage());
            }

            @Override
            public void onDone() {
                if (parentRunnable != null) {
                    parentRunnable.run();
                    parentRunnable = null;
                }
                
                btnRefresh.setEnabled(true);
            }
        });
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (!editMode) {
            int row = table.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Silahkan Pilih Data Yang Mau Diedit");
                return;
            }
            
            EventVoting votingS = listVoting.get(row);

            editMode = true;
            editEntity = votingS;
            
            txtNamaEvent.setText(votingS.getNama());
            // Harus dikurangi 1900, karena library Date otomatis menambahkan 1900
            txtMulai.setDate(new Date(votingS.getTanggalMulai().getYear() - 1900, votingS.getTanggalMulai().getMonthValue(), votingS.getTanggalMulai().getDayOfMonth()));
            txtSelesai.setDate(new Date(votingS.getTanggalSelesai().getYear() - 1900, votingS.getTanggalSelesai().getMonthValue(), votingS.getTanggalSelesai().getDayOfMonth()));
        } else {
            String namaEvent = txtNamaEvent.getText().trim();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String tanggal_mulai = txtMulai.getDate() != null ? dateFormat.format(txtMulai.getDate()) : "";
            String tanggal_selesai = txtSelesai.getDate() != null ? dateFormat.format(txtSelesai.getDate()) : "";
            
            if (namaEvent.isEmpty() || tanggal_mulai.isEmpty() || tanggal_selesai.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tidak boleh ada inputan yang kosong");
                return;
            }
            
            KesequlHttpRequest req = new KesequlHttpRequest(KesequlHttpRequest.Method.POST);
            req.setUrl("voting/event?token=" + user.getToken());
            req.setVal(
                "id_event_voting=" + editEntity.getIdEventVoting() +
                "&nama_event=" + namaEvent + 
                "&tanggal_mulai=" + tanggal_mulai +
                "&tanggal_selesai=" + tanggal_selesai +
                "&status=true"
            );
            
            Client.executeConnection(req, null, new KesequlHttpCallback() {
                @Override
                public void onSuccess(int status, String pesan, Object data) {
                    if (!Client.isTokenExpired(KelolaVoting.this, status, user)) {
                        if (status == 1) {
                            editMode = false;
                            editEntity = null;
                            
                            txtNamaEvent.setText("");
                            txtMulai.setDate(null);
                            txtSelesai.setDate(null);
                        }
                        JOptionPane.showMessageDialog(KelolaVoting.this, pesan);
                    }
                }

                @Override
                public void onFailed(Exception ex) {
                    JOptionPane.showMessageDialog(KelolaVoting.this, ex.getMessage());
                }
                
                @Override
                public void onDone() {
                    btnRefresh.setEnabled(!editMode);
                    btnDetail.setEnabled(!editMode);
                    btnBuatSelesai.setEnabled(!editMode);
                    btnTambah.setEnabled(!editMode);
                    btnEdit.setText(!editMode ? "Edit" : "Terapkan");
                    btnHapus.setEnabled(!editMode);
                    
                    btnRefreshActionPerformed(evt);
                }
            });
        }
        
        btnRefresh.setEnabled(!editMode);
        btnDetail.setEnabled(!editMode);
        btnBuatSelesai.setEnabled(!editMode);
        btnTambah.setEnabled(!editMode);
        btnEdit.setText(!editMode ? "Edit" : "Terapkan");
        btnHapus.setEnabled(!editMode);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int row = table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Data Yang Mau Diedit");
            return;
        }

        EventVoting votingS = listVoting.get(row);
        
        if (JOptionPane.showConfirmDialog(this, "Yakin ingin dihapus ?", "Konfirmasi", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            btnHapus.setEnabled(false);
            KesequlHttpRequest req = new KesequlHttpRequest(KesequlHttpRequest.Method.DELETE);
            req.setUrl("voting/event?token=" + user.getToken());
            req.setVal("id_event_voting=" + votingS.getIdEventVoting());
            
            Client.executeConnection(req, null, new KesequlHttpCallback() {
                @Override
                public void onSuccess(int status, String pesan, Object data) {
                    if (!Client.isTokenExpired(KelolaVoting.this, status, user))
                        JOptionPane.showMessageDialog(KelolaVoting.this, pesan);
                }

                @Override
                public void onFailed(Exception ex) {
                    JOptionPane.showMessageDialog(KelolaVoting.this, ex.getMessage());
                }
                
                @Override
                public void onDone() {
                    btnHapus.setEnabled(true);
                    btnRefreshActionPerformed(evt);
                }
            });
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailActionPerformed
        int row = table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Data Yang Mau Diedit");
            return;
        }

        EventVoting votingS = listVoting.get(row);
        
        btnDetail.setEnabled(false);
        KelolaTeamVoting frame = new KelolaTeamVoting(user, votingS, () -> btnDetail.setEnabled(true));
        frame.setLocationRelativeTo(this);
        frame.setVisible(true);
    }//GEN-LAST:event_btnDetailActionPerformed

    private void btnBuatSelesaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuatSelesaiActionPerformed
        int row = table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Data Yang Mau Diedit");
            return;
        }

        EventVoting votingS = listVoting.get(row);
        
        if (JOptionPane.showConfirmDialog(this, "Yakin ingin diselesaikan ?", "Konfirmasi", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            KesequlHttpRequest req = new KesequlHttpRequest(KesequlHttpRequest.Method.POST);
            req.setUrl("voting/event?token=" + user.getToken());
            req.setVal("id_event_voting=" + votingS.getIdEventVoting() + "&status=false");
            
            Client.executeConnection(req, null, new KesequlHttpCallback() {
                @Override
                public void onPrepare() {
                    btnBuatSelesai.setEnabled(false);
                }
                
                @Override
                public void onSuccess(int status, String pesan, Object data) {
                    if (!Client.isTokenExpired(KelolaVoting.this, status, user)) {
                        JOptionPane.showMessageDialog(KelolaVoting.this, pesan);
                    }
                }

                @Override
                public void onFailed(Exception ex) {
                    JOptionPane.showMessageDialog(KelolaVoting.this, ex.getMessage());
                }

                @Override
                public void onDone() {
                    btnBuatSelesai.setEnabled(true);
                    btnRefreshActionPerformed(evt);
                }
            });
        }
    }//GEN-LAST:event_btnBuatSelesaiActionPerformed

    private void btnLihatLaporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLihatLaporanActionPerformed
        int row = table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Data Yang Mau Diedit");
            return;
        }

        EventVoting votingS = listVoting.get(row);
        
        if (votingS.isStatus()) {
            JOptionPane.showMessageDialog(this, "Event belum selesai belum bisa melihat laporan");
            return;
        }
        
        if (JOptionPane.showConfirmDialog(this, "Melihat laporan akan membuka browser yakin ?", "Konfirmasi", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
            try {
                Desktop.getDesktop().browse(URI.create(LINK_BUKA_LAPORAN + votingS.getIdEventVoting() + "?token=" + user.getToken()));
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnLihatLaporanActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuatSelesai;
    private javax.swing.JButton btnDetail;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnLihatLaporan;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnTambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    private com.toedter.calendar.JDateChooser txtMulai;
    private javax.swing.JTextField txtNamaEvent;
    private com.toedter.calendar.JDateChooser txtSelesai;
    // End of variables declaration//GEN-END:variables
}
